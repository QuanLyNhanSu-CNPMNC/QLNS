@model WebApplication1.Models.NhanVien

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1 class="function-page-title">THÊM NHÂN VIÊN</h1>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.HoTen, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.HoTen, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.HoTen, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NgaySinh, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NgaySinh, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NgaySinh, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.GioiTinh, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.GioiTinh, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.DropDownList("GioiTinh", new List<SelectListItem> {
            new SelectListItem { Text = "Nam", Value ="Nam",Selected = true},
            new SelectListItem { Text = "Nữ", Value ="Nữ"}
            })
            @Html.ValidationMessageFor(model => model.GioiTinh, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.QueQuan, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.QueQuan, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.QueQuan, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DiaChi, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DiaChi, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DiaChi, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CMND, htmlAttributes: new { @class = "control-label col-md-2", style = "max-width: 30.666667%;" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CMND, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CMND, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SDT, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SDT, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SDT, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.HinhAnh, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.HinhAnh, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.HinhAnh, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MaChucVu, "Chức vụ", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("MaChucVu", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MaChucVu, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MaPB, "Phòng ban", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("MaPB", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MaPB, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TrangThai, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.CheckBoxFor(model => model.TrangThai, new { @checked = "checked" })
                @Html.ValidationMessageFor(model => model.TrangThai, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-md-2">Tên quyền</label>
        <div class="col-md-10">
            @Html.DropDownList("MaQuyen", null, htmlAttributes: new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-md-2">Lương cơ bản</label>
        <div class="col-md-10">
            <div class="checkbox">
                @Html.TextBox("LuongCoBan", null, new { @type = "number", onkeypress = "return isNumber(event)", onblur = "checkTextField(this);" })
            </div>
            @Html.Partial("_Notifications")
        </div>
    </div>

    @{
        if (Session["TenNhanVien"] == null)
        {
            <input type="hidden" value="Ẩn danh" name="NguoiTao" id="NguoiTao" />
            <input type="hidden" value="@DateTime.Now" name="NgayTao" id="NgayTao" />
        }
        else
        {
            <input type="hidden" value="@Session["TenNhanVien"]" name="NguoiTao" id="NguoiTao" />
            <input type="hidden" value="@DateTime.Now" name="NgayTao" id="NgayTao" />
        }
    }
    <div class="form-group">
        <div class="col-md-10">
            @{
                if (Session["TenNhanVien"] == null)
                {
                    <input type="hidden" value="Ẩn danh" name="NguoiSua" id="NguoiSua" />
                    <input type="hidden" value="@DateTime.Now" name="NgaySua" id="NgaySua" />
                }
                else
                {
                    <input type="hidden" value="@Session["TenNhanVien"]" name="NguoiSua" id="NguoiSua" />
                    <input type="hidden" value="@DateTime.Now" name="NgaySua" id="NgaySua" />
                }
            }
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Thêm" class="btn btn-success" id="submit" />
        </div>
    </div>
</div>
}

<div class="footer-function">
    @Html.ActionLink("Quay lại danh sách", "Index")
</div>
<br />
<script>
    function isNumber(evt) {
        evt = (evt) ? evt : window.event;
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode > 31 && (charCode < 48 || charCode > 57)) {
            return false;
        }
        return true;
    }
    //function checkTextField(field) {
    //    document.getElementById("error").innerText =
    //        (field.value === "") ? "Field is empty." : "";
    //}
    //$(document).ready(function () {
    //    $('#submit').click(function () {
    //        if (!$('#LuongCoBan').val()) {
    //            document.getElementById("error").innerText =
    //                (field.value === "") ? "Lương cơ bản không được trống." : "";
    //        }
    //    })
    //});
</script>